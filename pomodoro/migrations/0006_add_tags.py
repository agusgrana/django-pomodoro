# Generated by Django 2.1.3 on 2018-11-29 12:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def convert_category_to_tag(apps, schema_editor):
    Tag = apps.get_model("pomodoro", "Tag")
    for p in apps.get_model("pomodoro", "Pomodoro").objects.all():
        if p.category:
            t, _ = Tag.objects.get_or_create(owner_id=p.owner_id, title=p.category)
            p.tags.add(t)
    for f in apps.get_model("pomodoro", "Favorite").objects.all():
        if f.category:
            t, _ = Tag.objects.get_or_create(owner_id=f.owner_id, title=f.category)
            f.tags.add(t)

def skip_reverse(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pomodoro', '0005_auto_20171212_1133'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='title')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='favorite',
            name='tags',
            field=models.ManyToManyField(related_name='favorite_set', to='pomodoro.Tag'),
        ),
        migrations.AddField(
            model_name='pomodoro',
            name='tags',
            field=models.ManyToManyField(to='pomodoro.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('title', 'owner')},
        ),
        migrations.RunPython(convert_category_to_tag, skip_reverse),
    ]
